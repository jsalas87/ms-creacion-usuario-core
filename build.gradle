plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'jvm-test-suite'
    id 'jacoco'
    id "org.owasp.dependencycheck" version "8.2.1"
}

group = 'com.rfsc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.8")
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation group: 'org.springframework.security', name: 'spring-security-rsa', version: '1.1.1'
    implementation 'org.springframework.security:spring-security-crypto'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    //implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2:2.2.220'

    //Other
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'

    //dependency check
    implementation 'org.yaml:snakeyaml:2.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'

    //JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'

    //Data Base
    //runtimeOnly 'org.postgresql:postgresql:42.5.4'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.15'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // ArchUnit
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.1'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootRun {
    jvmArgs = ["-Djava.security.egd=file:/dev/./urandom", "-Dspring.profiles.active=local", "-Dcom.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize=true"]
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

jar.enabled = false
